// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/shultziv/appposition/internal/service/appposition (interfaces: AppRatingRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/shultziv/appposition/internal/domain"
)

// MockAppRatingRepo is a mock of AppRatingRepo interface.
type MockAppRatingRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAppRatingRepoMockRecorder
}

// MockAppRatingRepoMockRecorder is the mock recorder for MockAppRatingRepo.
type MockAppRatingRepoMockRecorder struct {
	mock *MockAppRatingRepo
}

// NewMockAppRatingRepo creates a new mock instance.
func NewMockAppRatingRepo(ctrl *gomock.Controller) *MockAppRatingRepo {
	mock := &MockAppRatingRepo{ctrl: ctrl}
	mock.recorder = &MockAppRatingRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppRatingRepo) EXPECT() *MockAppRatingRepoMockRecorder {
	return m.recorder
}

// GetAppPositionsByDays mocks base method.
func (m *MockAppRatingRepo) GetAppPositionsByDays(arg0 context.Context, arg1, arg2 uint32, arg3, arg4 time.Time) ([]*domain.AppPosition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppPositionsByDays", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]*domain.AppPosition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAppPositionsByDays indicates an expected call of GetAppPositionsByDays.
func (mr *MockAppRatingRepoMockRecorder) GetAppPositionsByDays(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppPositionsByDays", reflect.TypeOf((*MockAppRatingRepo)(nil).GetAppPositionsByDays), arg0, arg1, arg2, arg3, arg4)
}
